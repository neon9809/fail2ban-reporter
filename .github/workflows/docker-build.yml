name: Docker Build and Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (without v prefix)'
        required: true

jobs:
  docker:
    # 仅在 commit message 以 v 开头时执行
    if: github.event_name == 'workflow_dispatch' || startsWith(github.event.head_commit.message, 'v')
    runs-on: ubuntu-latest
    permissions:
      contents: write   # 必须是 write 才能发 release
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            # 从 commit message 里提取 vX.Y.Z
            MSG="$(git log -1 --pretty=%B)"
            if [[ "$MSG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
              echo "VERSION=${BASH_REMATCH[0]}" >> $GITHUB_OUTPUT
            else
              echo "❌ Commit message must start with vX.Y.Z" >&2
              exit 1
            fi
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.extract-version.outputs.version }}
          labels: |
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description=Fail2ban log monitoring and reporting tool
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ needs.extract-version.outputs.version }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.VERSION }}
          provenance: false

      - name: Prepare release notes
        id: notes
        run: |
          if [ -f changelog.md ]; then
            echo "NOTES<<EOF" >> $GITHUB_OUTPUT
            cat changelog.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "NOTES=" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.notes.outputs.NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
